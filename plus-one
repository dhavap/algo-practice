// You are given a large integer represented as an integer array digits, where 
// each digits[i] is the ith digit of the integer. The digits are ordered from most 
// significant to least significant in left-to-right order. The large integer 
// does not contain any leading 0's.
// Increment the large integer by one and return the resulting array of digits.
// [Problem from leetcode.com]

public class Solution {
    public int[] PlusOne(int[] digits) {
        if (digits[digits.Length - 1] < 9)
        {
            digits[digits.Length - 1]++;
            return digits;
        } 
        
        int carryOver = 1;
        List<int> result = new List<int>();
         for (int i = (digits.Length - 1); i >= 0; i--) 
         {
             if (carryOver == 1) 
             {
                 if (digits[i] == 9)
                 {
                     result.Insert(0, 0);
                     if (i == 0)
                     {
                         result.Insert(0, carryOver);
                     }
                 } else {
                     result.Insert(0, digits[i] + carryOver);
                     carryOver = 0;
                 }
                 
             } else {
                 result.Insert(0, digits[i]);
             }
         }
        int[] finalResult = result.ToArray();
        return finalResult;
    }
}
